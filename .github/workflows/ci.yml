name: ci
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        
    steps:
    - name: Get repository name
      shell: bash
      run: echo ::set-env name=REPOSITORY_NAME::${GITHUB_REPOSITORY##*/}
      
    - name: Clone repository
      uses: actions/checkout@master
      with:
        fetch-depth: 5
        submodules: true
    - name: Install rust
      uses: hecrj/setup-rust-action@v1
    - name: Configure cargo data directory
      run: echo "::set-env name=CARGO_HOME::$(pwd)/.cargo_home"
    - name: Cache
      uses: actions/cache@v2
      with:
        path: |-
          .cargo_home
          target/*/.*
          target/*/build
          target/*/deps
        key:
          ${{ matrix.os }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          ${{ matrix.os }}-
                    
    - name: Build release
      run: cargo build --release --locked --all-targets
    - name: Pre-release (linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        cd target/release
        zip -r $REPOSITORY_NAME-x86_64-unknown-linux-gnu.zip $REPOSITORY_NAME
    - name: Pre-release (mac)
      if: startsWith(matrix.os, 'macOS')
      run: |
        cd target/release
        zip -r $REPOSITORY_NAME-x86_64-apple-darwin.zip $REPOSITORY_NAME
    - name: Pre-release (windows)
      if: startsWith(matrix.os, 'windows')
      run: |
       Compress-Archive -CompressionLevel Optimal -Force -Path target/release/${Env:REPOSITORY_NAME}.exe -DestinationPath target/release/${Env:REPOSITORY_NAME}-x86_64-pc-windows-msvc.zip
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          target/release/${{ env.REPOSITORY_NAME }}-x86_64-pc-windows-msvc.zip
          target/release/${{ env.REPOSITORY_NAME }}-x86_64-unknown-linux-gnu.zip
          target/release/${{ env.REPOSITORY_NAME }}-x86_64-apple-darwin.zip
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@master
      with:
        fetch-depth: 5
        submodules: true
    - name: Install rust
      uses: hecrj/setup-rust-action@v1
    - name: Configure cargo data directory
      run: echo "::set-env name=CARGO_HOME::$(pwd)/.cargo_home"
    - name: Cache
      uses: actions/cache@v2
      with:
        path: |-
          .cargo_home
          target/*/.*
          target/*/build
          target/*/deps
        key:
          ${{ matrix.os }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          ${{ matrix.os }}-
          
    - name: Check fmt
      run: cargo fmt -- --check
    - name: Check lint
      run: cargo clippy --release --all-targets --locked  -- -D clippy::all
